// Code generated by MockGen. DO NOT EDIT.
// Source: ./interface.go

// Package mock is a generated GoMock package.
package mock

import (
	sql "database/sql"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDB is a mock of DB interface.
type MockDB struct {
	ctrl     *gomock.Controller
	recorder *MockDBMockRecorder
}

// MockDBMockRecorder is the mock recorder for MockDB.
type MockDBMockRecorder struct {
	mock *MockDB
}

// NewMockDB creates a new mock instance.
func NewMockDB(ctrl *gomock.Controller) *MockDB {
	mock := &MockDB{ctrl: ctrl}
	mock.recorder = &MockDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDB) EXPECT() *MockDBMockRecorder {
	return m.recorder
}

// GetBalanceUser mocks base method.
func (m *MockDB) GetBalanceUser(tx *sql.Tx, id int64) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalanceUser", tx, id)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalanceUser indicates an expected call of GetBalanceUser.
func (mr *MockDBMockRecorder) GetBalanceUser(tx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalanceUser", reflect.TypeOf((*MockDB)(nil).GetBalanceUser), tx, id)
}

// UpdateBalanceUser mocks base method.
func (m *MockDB) UpdateBalanceUser(tx *sql.Tx, id int64, newBalance float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateBalanceUser", tx, id, newBalance)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateBalanceUser indicates an expected call of UpdateBalanceUser.
func (mr *MockDBMockRecorder) UpdateBalanceUser(tx, id, newBalance interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateBalanceUser", reflect.TypeOf((*MockDB)(nil).UpdateBalanceUser), tx, id, newBalance)
}
